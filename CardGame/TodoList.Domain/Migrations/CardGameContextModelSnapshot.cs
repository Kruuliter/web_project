// <auto-generated />
using System;
using CardGame.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CardGame.Domain.Migrations
{
    [DbContext(typeof(CardGameContext))]
    partial class CardGameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CardGame.Domain.Entities.Cards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("atk")
                        .HasColumnType("int");

                    b.Property<string>("cardImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hp")
                        .HasColumnType("int");

                    b.Property<int>("mp")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("CardGame.Domain.Entities.CardsInBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<int>("idCards")
                        .HasColumnType("int");

                    b.Property<int>("id_user")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idCards");

                    b.HasIndex("id_user");

                    b.ToTable("CardsInBox");
                });

            modelBuilder.Entity("CardGame.Domain.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("whenDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("who_id_user")
                        .HasColumnType("int");

                    b.Property<string>("whom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("who_id_user");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("CardGame.Domain.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("cash")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CardGame.Domain.Entities.CardsInBox", b =>
                {
                    b.HasOne("CardGame.Domain.Entities.Cards", "card")
                        .WithMany()
                        .HasForeignKey("idCards")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardGame.Domain.Entities.Users", "user")
                        .WithMany()
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("card");

                    b.Navigation("user");
                });

            modelBuilder.Entity("CardGame.Domain.Entities.Post", b =>
                {
                    b.HasOne("CardGame.Domain.Entities.Users", "who")
                        .WithMany()
                        .HasForeignKey("who_id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("who");
                });
#pragma warning restore 612, 618
        }
    }
}
